/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package USER;

import AUTH.Authenticate;
import Libraries.Auth;
import Libraries.Crypt;
import Libraries.Database;
import static Libraries.Database.DBNAME;
import static Libraries.Database.DBPASS;
import static Libraries.Database.DBUSER;
import static Libraries.Session.Token;
import static Libraries.Session.UserInformation;
import javax.swing.SwingUtilities;
import Libraries.Variabel.Position;
import static Libraries.Variabel.selectedDetails;
import java.io.File;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.swing.JOptionPane;



/**
 *
 * @author surya
 */
public class Formulir extends javax.swing.JFrame {

    /**
     * Creates new form Beranda
     */
    public Formulir() {
        initComponents();
    }
    
    public static File ImagesFile = null;
    private int intTotal;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Sidebar = new javax.swing.JPanel();
        navItems1 = new javax.swing.JButton();
        navItems2 = new javax.swing.JButton();
        Header = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        DateYear = new javax.swing.JTextField();
        DateMonth = new javax.swing.JTextField();
        DateDay = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        Durasi = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        DateYear1 = new javax.swing.JTextField();
        DateMonth1 = new javax.swing.JTextField();
        DateDay1 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        HargaTotal = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        Pembayaran = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Catatan = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RENTAL | Formulir Rental Mobil");
        setLocation(Position.Center("screenX"),Position.Center("screenY")
        );
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Sidebar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Sidebar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        navItems1.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        navItems1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        navItems1.setText("Konfirmasi");
        navItems1.setAlignmentY(0.0F);
        navItems1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        navItems1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        navItems1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        navItems1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navItems1ActionPerformed(evt);
            }
        });
        Sidebar.add(navItems1, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 8, 184, 28));

        navItems2.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        navItems2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/arrow_circle_left_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        navItems2.setText("Kembali");
        navItems2.setAlignmentY(0.0F);
        navItems2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        navItems2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        navItems2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        navItems2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navItems2ActionPerformed(evt);
            }
        });
        Sidebar.add(navItems2, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 364, 184, 28));

        getContentPane().add(Sidebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 400));

        Header.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Nama Pengguna");

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 600, 40));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setFocusCycleRoot(true);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel10.setText(": : Informasi Rental");
        jLabel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 15, 480, 20));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel11.setText("Tanggal Mulai Rental");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 160, 20));

        DateYear.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        DateYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DateYear.setText("2021");
        DateYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateYearFocusLost(evt);
            }
        });
        jPanel2.add(DateYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 60, 25));

        DateMonth.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        DateMonth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DateMonth.setText("1");
        DateMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateMonthFocusLost(evt);
            }
        });
        jPanel2.add(DateMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 40, 25));

        DateDay.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        DateDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DateDay.setText("1");
        DateDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateDayFocusLost(evt);
            }
        });
        jPanel2.add(DateDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 40, 25));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 180, 60));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel12.setText("Lama Rental");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 80, 20));

        Durasi.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        Durasi.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Durasi.setText("1");
        Durasi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DurasiFocusLost(evt);
            }
        });
        jPanel3.add(Durasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 80, 25));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 100, 60));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel13.setText("Tanggal Selesai Rental");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 160, 20));

        DateYear1.setEditable(false);
        DateYear1.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        DateYear1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DateYear1.setText("2021");
        DateYear1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        DateYear1.setEnabled(false);
        DateYear1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateYear1FocusLost(evt);
            }
        });
        jPanel4.add(DateYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 60, 25));

        DateMonth1.setEditable(false);
        DateMonth1.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        DateMonth1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DateMonth1.setText("1");
        DateMonth1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        DateMonth1.setEnabled(false);
        DateMonth1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateMonth1FocusLost(evt);
            }
        });
        jPanel4.add(DateMonth1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 40, 25));

        DateDay1.setEditable(false);
        DateDay1.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        DateDay1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DateDay1.setText("1");
        DateDay1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        DateDay1.setEnabled(false);
        DateDay1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateDay1FocusLost(evt);
            }
        });
        jPanel4.add(DateDay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 40, 25));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 180, 60));

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel14.setText("Harga Total Rental");
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 270, 20));

        HargaTotal.setEditable(false);
        HargaTotal.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        HargaTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        HargaTotal.setText("0,00");
        HargaTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        HargaTotal.setEnabled(false);
        HargaTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                HargaTotalFocusLost(evt);
            }
        });
        jPanel5.add(HargaTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 270, 25));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 290, 70));

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel15.setText("Pilih Pembayaran");
        jPanel6.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 160, 20));

        Pembayaran.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        Pembayaran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tunai", "Dompet Digital", "Transfer Bank" }));
        jPanel6.add(Pembayaran, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 160, 30));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 180, 70));

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel16.setText("Catatan (Opsional)");
        jPanel7.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 460, 20));

        Catatan.setColumns(20);
        Catatan.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        Catatan.setRows(5);
        jScrollPane1.setViewportView(Catatan);

        jPanel7.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 460, 90));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 480, 130));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 600, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(Auth.isLoggedIn() == false){
            dispose();
            
            SwingUtilities.invokeLater(() -> new Authenticate().setVisible(true));
        }
        try {
            jLabel4.setText(Database.SELECT("SELECT Nama FROM penyewa WHERE Username = ?"));
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(Formulir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void navItems1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navItems1ActionPerformed
        String strDM = DateYear.getText() + "-" + DateMonth.getText() + "-" + DateDay.getText();
        String strDS = DateYear1.getText() + "-" + DateMonth1.getText() + "-" + DateDay1.getText();
        int intID = 0;
        try (java.sql.Connection DB = DriverManager.getConnection(DBNAME, DBUSER, DBPASS)) {
            String DBQuery = Catatan.getText() != null ? "INSERT INTO peminjaman(Mobil,Penyewa,Mulai,Selesai,HT,Pembayaran,Catatan) VALUES(?,?,?,?,?,?,?)" : "INSERT INTO peminjaman(Mobil,Penyewa,Mulai,Selesai,HT,Pembayaran) VALUES(?,?,?,?,?,?)";
            String Username = Crypt.Decrypt(Token, (SecretKey) UserInformation[1], (Cipher) UserInformation[2]);
            try(PreparedStatement Statements = DB.prepareStatement("SELECT * FROM penyewa WHERE Username=?")){
                Statements.setString(1,Username);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    intID = Results.getInt("ID");
                }
            }
            try(PreparedStatement Statements = DB.prepareStatement(DBQuery)){
                Statements.setInt(1, selectedDetails);
                Statements.setInt(2, intID);
                Statements.setString(3, strDM);
                Statements.setString(4, strDS);
                Statements.setInt(5, intTotal);
                Statements.setString(6, String.valueOf(Pembayaran.getSelectedItem()));
                if(Catatan.getText() != null){
                    Statements.setString(7, Catatan.getText());
                }
                
                if(Statements.executeUpdate() > 0){
                    
                    dispose();
                    SwingUtilities.invokeLater(() -> new USER.Beranda().setVisible(true));
                } else{
                    JOptionPane.showMessageDialog(null, "Gagal menyimpan Data!","Peringatan",JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException ex){
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan sistem!\n" + ex.getMessage(),"Peringatan",JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex){
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan sistem!\n" + ex.getMessage(),"Peringatan",JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(Formulir.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_navItems1ActionPerformed

    private void navItems2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navItems2ActionPerformed
        dispose();
        SwingUtilities.invokeLater(() -> new USER.Beranda().setVisible(true));
    }//GEN-LAST:event_navItems2ActionPerformed

    private void DateDayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateDayFocusLost
        String currentDate = DateYear.getText() + "-" + DateMonth.getText() + "-" + DateDay.getText();
        int intDurasi = Integer.parseInt(Durasi.getText());
        int intH = 0;
        int intM = 0;
        int intB = 0;
        try (Connection DB = DriverManager.getConnection(DBNAME, DBUSER, DBPASS)) {
            String CMDQuery = "SELECT CASE WHEN DAY(STR_TO_DATE(?, '%Y-%m-%d')) = DAY(?)"
                    + "AND MONTH(STR_TO_DATE(?, '%Y-%m-%d')) = MONTH(?)"
                    + "AND YEAR(STR_TO_DATE(?, '%Y-%m-%d')) = YEAR(?)"
                    + "THEN TRUE ELSE FALSE END AS DateConfirmed";
            try(PreparedStatement Statements = DB.prepareStatement(CMDQuery)){
                Statements.setString(1, currentDate);
                Statements.setString(2, currentDate);
                Statements.setString(3, currentDate);
                Statements.setString(4, currentDate);
                Statements.setString(5, currentDate);
                Statements.setString(6, currentDate);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    if(Results.getBoolean("DateConfirmed") == false){
                        DateDay.setText("1");
                    }
                }
            }
            try(PreparedStatement Statements = DB.prepareStatement("SELECT DATE_ADD(?, INTERVAL ? DAY) AS Selesai")){
                Statements.setString(1, currentDate);
                Statements.setInt(2, intDurasi);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    DateTimeFormatter DTF = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                    LocalDate LD = LocalDate.parse(Results.getString("Selesai"),DTF);
                    DateDay1.setText(String.valueOf(LD.getDayOfMonth()));
                    DateMonth1.setText(String.valueOf(LD.getMonthValue()));
                    DateYear1.setText(String.valueOf(LD.getYear()));
                }
            }
            try(PreparedStatement Statements = DB.prepareStatement("SELECT HSH, HSM, HSB FROM mobil WHERE ID=?")){
                Statements.setInt(1, selectedDetails);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    intH = Results.getInt("HSH");
                    intM = Results.getInt("HSM");
                    intB = Results.getInt("HSB");
                }
            }
        } catch (SQLException ex){
            
        }
        NumberFormat Currency = NumberFormat.getCurrencyInstance(new Locale("id","ID"));
        if(intDurasi < 7){
            intTotal = intH * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        } else if(intDurasi >=7 && intDurasi <= 29){
            intTotal = (intM / 7) * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        } else if(intDurasi > 29){
            intTotal = (intB / 7) * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        }
    }//GEN-LAST:event_DateDayFocusLost

    private void DateMonthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateMonthFocusLost
        int currentMonth = Integer.parseInt(DateMonth.getText());
        int intDurasi = Integer.parseInt(Durasi.getText());
        if(currentMonth > 12){
            DateMonth.setText("12");
        } else if(currentMonth < 1){
            DateMonth.setText("1");
        }
        String currentDate = DateYear.getText() + "-" + DateMonth.getText() + "-" + DateDay.getText();
        int intH = 0;
        int intM = 0;
        int intB = 0;
        try (Connection DB = DriverManager.getConnection(DBNAME, DBUSER, DBPASS)) {
            String CMDQuery = "SELECT CASE WHEN DAY(STR_TO_DATE(?, '%Y-%m-%d')) = DAY(?)"
                    + "AND MONTH(STR_TO_DATE(?, '%Y-%m-%d')) = MONTH(?)"
                    + "AND YEAR(STR_TO_DATE(?, '%Y-%m-%d')) = YEAR(?)"
                    + "THEN TRUE ELSE FALSE END AS DateConfirmed";
            try(PreparedStatement Statements = DB.prepareStatement(CMDQuery)){
                Statements.setString(1, currentDate);
                Statements.setString(2, currentDate);
                Statements.setString(3, currentDate);
                Statements.setString(4, currentDate);
                Statements.setString(5, currentDate);
                Statements.setString(6, currentDate);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    if(Results.getBoolean("DateConfirmed") == false){
                        DateDay.setText("1");
                    }
                }
            }
            try(PreparedStatement Statements = DB.prepareStatement("SELECT DATE_ADD(?, INTERVAL ? DAY) AS Selesai")){
                Statements.setString(1, currentDate);
                Statements.setInt(2, intDurasi);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    DateTimeFormatter DTF = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                    LocalDate LD = LocalDate.parse(Results.getString("Selesai"),DTF);
                    DateDay1.setText(String.valueOf(LD.getDayOfMonth()));
                    DateMonth1.setText(String.valueOf(LD.getMonthValue()));
                    DateYear1.setText(String.valueOf(LD.getYear()));
                }
            }
            try(PreparedStatement Statements = DB.prepareStatement("SELECT HSH, HSM, HSB FROM mobil WHERE ID=?")){
                Statements.setInt(1, selectedDetails);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    intH = Results.getInt("HSH");
                    intM = Results.getInt("HSM");
                    intB = Results.getInt("HSB");
                }
            }
        } catch (SQLException ex){
            
        }
        NumberFormat Currency = NumberFormat.getCurrencyInstance(new Locale("id","ID"));
        if(intDurasi < 7){
            intTotal = intH * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        } else if(intDurasi >=7 && intDurasi <= 29){
            intTotal = (intM / 7) * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        } else if(intDurasi > 29){
            intTotal = (intB / 7) * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        }
    }//GEN-LAST:event_DateMonthFocusLost

    private void DateYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateYearFocusLost
        int currentYear = Integer.parseInt(DateYear.getText());
        int intDurasi = Integer.parseInt(Durasi.getText());
        if(currentYear > 2100){
            DateYear.setText("2100");
        } else if(currentYear < 1990){
            DateYear.setText("1990");
        }
        String currentDate = DateYear.getText() + "-" + DateMonth.getText() + "-" + DateDay.getText();
        int intH = 0;
        int intM = 0;
        int intB = 0;
        try (Connection DB = DriverManager.getConnection(DBNAME, DBUSER, DBPASS)) {
            String CMDQuery = "SELECT CASE WHEN DAY(STR_TO_DATE(?, '%Y-%m-%d')) = DAY(?)"
                    + "AND MONTH(STR_TO_DATE(?, '%Y-%m-%d')) = MONTH(?)"
                    + "AND YEAR(STR_TO_DATE(?, '%Y-%m-%d')) = YEAR(?)"
                    + "THEN TRUE ELSE FALSE END AS DateConfirmed";
            try(PreparedStatement Statements = DB.prepareStatement(CMDQuery)){
                Statements.setString(1, currentDate);
                Statements.setString(2, currentDate);
                Statements.setString(3, currentDate);
                Statements.setString(4, currentDate);
                Statements.setString(5, currentDate);
                Statements.setString(6, currentDate);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    if(Results.getBoolean("DateConfirmed") == false){
                        DateDay.setText("1");
                    }
                }
            }
            try(PreparedStatement Statements = DB.prepareStatement("SELECT DATE_ADD(?, INTERVAL ? DAY) AS Selesai")){
                Statements.setString(1, currentDate);
                Statements.setInt(2, intDurasi);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    DateTimeFormatter DTF = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                    LocalDate LD = LocalDate.parse(Results.getString("Selesai"),DTF);
                    DateDay1.setText(String.valueOf(LD.getDayOfMonth()));
                    DateMonth1.setText(String.valueOf(LD.getMonthValue()));
                    DateYear1.setText(String.valueOf(LD.getYear()));
                }
            }
            try(PreparedStatement Statements = DB.prepareStatement("SELECT HSH, HSM, HSB FROM mobil WHERE ID=?")){
                Statements.setInt(1, selectedDetails);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    intH = Results.getInt("HSH");
                    intM = Results.getInt("HSM");
                    intB = Results.getInt("HSB");
                }
            }
        } catch (SQLException ex){
            
        }
        NumberFormat Currency = NumberFormat.getCurrencyInstance(new Locale("id","ID"));
        if(intDurasi < 7){
            intTotal = intH * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        } else if(intDurasi >=7 && intDurasi <= 29){
            intTotal = (intM / 7) * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        } else if(intDurasi > 29){
            intTotal = (intB / 7) * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        }
    }//GEN-LAST:event_DateYearFocusLost

    private void DurasiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DurasiFocusLost
        int intDurasi = Integer.parseInt(Durasi.getText());
        if(intDurasi > 30){
            Durasi.setText("30");
        } else if(intDurasi < 1){
            Durasi.setText("1");
        }
        String currentDate = DateYear.getText() + "-" + DateMonth.getText() + "-" + DateDay.getText();
        int intH = 0;
        int intM = 0;
        int intB = 0;
        try (Connection DB = DriverManager.getConnection(DBNAME, DBUSER, DBPASS)) {
            String CMDQuery = "SELECT DATE_ADD(?, INTERVAL ? DAY) AS Selesai";
            
            try(PreparedStatement Statements = DB.prepareStatement(CMDQuery)){
                Statements.setString(1, currentDate);
                Statements.setInt(2, intDurasi);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    DateTimeFormatter DTF = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                    LocalDate LD = LocalDate.parse(Results.getString("Selesai"),DTF);
                    DateDay1.setText(String.valueOf(LD.getDayOfMonth()));
                    DateMonth1.setText(String.valueOf(LD.getMonthValue()));
                    DateYear1.setText(String.valueOf(LD.getYear()));
                }
            }
            try(PreparedStatement Statements = DB.prepareStatement("SELECT HSH, HSM, HSB FROM mobil WHERE ID=?")){
                Statements.setInt(1, selectedDetails);
                ResultSet Results = Statements.executeQuery();
                if(Results.next()){
                    intH = Results.getInt("HSH");
                    intM = Results.getInt("HSM");
                    intB = Results.getInt("HSB");
                }
            }
        } catch (SQLException ex){
            
        }
        NumberFormat Currency = NumberFormat.getCurrencyInstance(new Locale("id","ID"));
        if(intDurasi < 7){
            intTotal = intH * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        } else if(intDurasi >=7 && intDurasi <= 29){
            intTotal = (intM / 7) * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        } else if(intDurasi > 29){
            intTotal = (intB / 7) * intDurasi;
            HargaTotal.setText((String) Currency.format(intTotal));
        }
    }//GEN-LAST:event_DurasiFocusLost

    private void DateYear1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateYear1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_DateYear1FocusLost

    private void DateMonth1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateMonth1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_DateMonth1FocusLost

    private void DateDay1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateDay1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_DateDay1FocusLost

    private void HargaTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_HargaTotalFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_HargaTotalFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Catatan;
    private javax.swing.JTextField DateDay;
    private javax.swing.JTextField DateDay1;
    private javax.swing.JTextField DateMonth;
    private javax.swing.JTextField DateMonth1;
    private javax.swing.JTextField DateYear;
    private javax.swing.JTextField DateYear1;
    private javax.swing.JTextField Durasi;
    private javax.swing.JTextField HargaTotal;
    private javax.swing.JPanel Header;
    private javax.swing.JComboBox<String> Pembayaran;
    private javax.swing.JPanel Sidebar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton navItems1;
    private javax.swing.JButton navItems2;
    // End of variables declaration//GEN-END:variables
}
